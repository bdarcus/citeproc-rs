name: CI
on:
  pull_request: {}
  push: 
    branches:
    - master
jobs:
  regressions:
    name: CSL Test Suite Regressions
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Extract branch name
        shell: bash
        run: |
          echo "##[set-output name=head;]$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-')"
          GITHUB_BASE=${{ github.base_ref }}
          if test -z "$GITHUB_BASE"; then
            # github.base_ref is apparently not available when pushing to a existing pull request branch
            # this is dumb
            # let's just guess for now
            GITHUB_BASE="refs/heads/master"
          fi
          echo "##[set-output name=base;]$(echo ${GITHUB_BASE#refs/heads/} | tr '/' '-')"
        id: branch
      - name: Download base output
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-2
          GITHUB_BASE: ${{ steps.branch.outputs.base }}
          GITHUB_HEAD: ${{ steps.branch.outputs.head }}
        run: |
          mkdir -p .snapshots/branches
          aws s3 cp s3://citeproc-rs-test-results/.snapshots/branches/$GITHUB_BASE .snapshots/branches/$GITHUB_BASE
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: nightly
      - name: Create ~/.cargo directory
        run: |
          mkdir -p ~/.cargo/registry
          mkdir -p ~/.cargo/git
          mkdir -p ./target
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: "Build tools package"
        run: cargo build --package tools
      - name: "Pull locales"
        run: cargo pull-locales
      - name: "Log test suite results"
        run: cargo test-suite store
      - name: "Compare test suite results for regressions"
        env:
          GITHUB_BASE: ${{ steps.branch.outputs.base }}
          GITHUB_HEAD: ${{ steps.branch.outputs.head }}
        run: |
          cp .snapshots/current .snapshots/branches/$GITHUB_HEAD
          cargo test-suite diff $GITHUB_BASE..$GITHUB_HEAD
      - name: "Upload test result artifacts"
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-2
          GITHUB_HEAD: ${{ steps.branch.outputs.head }}
          GITHUB_BASE: ${{ steps.branch.outputs.base }}
        run: |
            aws s3 cp .snapshots/current s3://citeproc-rs-test-results/.snapshots/branches/$GITHUB_HEAD
            aws s3 cp .snapshots/current s3://citeproc-rs-test-results/.snapshots/commits/$GITHUB_SHA

  build_wasm:
    name: Build WebAssembly Package & deploy demo
    needs: regressions
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: nightly
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f
      - name: Yarn install
        run: cd crates/wasm/js-demo && yarn
      - name: Yarn build (dev)
        if: github.event_name == 'pull_request'
        run: cd crates/wasm/js-demo && yarn build -d
      - name: Yarn build (prod)
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: cd crates/wasm/js-demo && yarn build -p
      - name: Build and Deploy
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: JamesIves/github-pages-deploy-action@master
        env:
          BRANCH: gh-pages
          ACCESS_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          FOLDER: crates/wasm/js-demo/dist
          # only available in beta3: https://github.com/JamesIves/github-pages-deploy-action/issues/21
          # but beta3 won't initialize properly
          # GITHUB_REPOSITORY: cormacrelf/citeproc-wasm-demo
